//OW Version 1.44.0.0.65302

variables
{
	global:
		0: heroList
		1: timeCounter
		2: gameIsAlmostDone
		3: leaderboard
		4: randomSectionOfMap
		5: arenaMap1
		6: arenaMap2
		7: arenaMap3
		8: arenaMap4

	player:
		0: damageDone
		1: damageDisplayPos
		2: damageDisplayScale
		3: damageDisplayText
		4: nextObjective
		5: killYourselfPunishment
		6: heroIcon
		7: heroSwapEffect
}

disabled rule("10K Damage Gun Game v8.0.0")
{
	event
	{
		Ongoing - Global;
	}
}

rule("Disable bulit-in game mode & start timer variables {Game in progress GLOBAL}")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Game In Progress == True;
	}

	actions
	{
		Disable Built-In Game Mode Scoring;
		Disable Built-In Game Mode Completion;
		Disable Built-In Game Mode Announcer;
		Disable Built-In Game Mode Music;
		Pause Match Time;
		Set Global Variable(timeCounter, 0.001);
		Set Global Variable(gameIsAlmostDone, False);
		disabled Create HUD Text(Filtered Array(Host Player, Compare(Custom String("#Jokaes", Null, Null, Null), ==, String("#{0}", Host Player,
			Null, Null))), Null, Custom String("svr load: {0} | svr avg: {1} | svr peak: {2}", Server Load, Server Load Average,
			Server Load Peak), Null, Top, -100.000, White, Lime Green, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Server Load Peak, <, 85)), Null, Custom String(
			"svr load: {0} | svr avg: {1} | svr peak: {2}", Server Load, Server Load Average, Server Load Peak), Null, Top, -100.000,
			White, Lime Green, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), And(Compare(Server Load Peak, >=, 85), Compare(Server Load Peak, <=, 170))),
			Null, Custom String("svr load: {0} | svr avg: {1} | svr peak: {2}", Server Load, Server Load Average, Server Load Peak), Null,
			Top, -100.000, White, Orange, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Server Load Peak, >, 170)), Null, Custom String(
			"svr load: {0} | svr avg: {1} | svr peak: {2}", Server Load, Server Load Average, Server Load Peak), Null, Top, -100.000,
			White, Red, White, Visible To and String, Default Visibility);
	}
}

rule("Damage track & display")
{
	event
	{
		Player Dealt Damage;
		All;
		All;
	}

	conditions
	{
		Victim != Attacker;
		Compare(Round To Integer(Event Damage, To Nearest), >=, 1) == True;
	}

	actions
	{
		Modify Player Variable(Event Player, damageDone, Add, Event Damage);
		Set Player Score(Event Player, Player Variable(Event Player, damageDone));
		Set Player Variable(Event Player, nextObjective, Multiply(Add(Round To Integer(Divide(Player Variable(Event Player, damageDone),
			1000), Down), 1), 1000));
		Destroy In-World Text(Player Variable(Event Player, damageDisplayText));
		Wait(0.016, Ignore Condition);
		Set Player Variable(Event Player, damageDisplayPos, Eye Position(Victim));
		Set Player Variable(Event Player, damageDisplayScale, Divide(Event Damage, 50));
		Skip If(Compare(Player Variable(Event Player, damageDisplayScale), >=, 1), 1);
		Set Player Variable(Event Player, damageDisplayScale, 1);
		Skip If(Event Was Critical Hit, 1);
		Create In-World Text(Event Player, Round To Integer(Event Damage, To Nearest), Player Variable(Event Player, damageDisplayPos),
			Player Variable(Event Player, damageDisplayScale), Clip Against Surfaces, Visible To Position and String, White,
			Default Visibility);
		Skip If(Not(Event Was Critical Hit), 1);
		Create In-World Text(Event Player, Round To Integer(Event Damage, To Nearest), Player Variable(Event Player, damageDisplayPos),
			Player Variable(Event Player, damageDisplayScale), Clip Against Surfaces, Visible To Position and String, Red,
			Default Visibility);
		Set Player Variable(Event Player, damageDisplayText, Last Text ID);
	}
}

disabled rule("Leaderboard {Reevaluation}")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Set Global Variable(leaderboard, Sorted Array(All Players(All Teams), Player Variable(Current Array Element, damageDone)));
		Wait(1, Ignore Condition);
		Loop;
	}
}

disabled rule("Leaderboard {HUD}")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create HUD Text(All Players(All Teams), Null, Null, Custom String(" ", Null, Null, Null), Left, -1.000, White, White, White,
			Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(leaderboard), 0), !=, Null)), Null,
			Null, String("{0} : {1} : {2}", Hero Icon String(Hero Of(Value In Array(Global Variable(leaderboard), 0))), Value In Array(
			Global Variable(leaderboard), 0), Round To Integer(Player Variable(Value In Array(Global Variable(leaderboard), 0),
			damageDone), To Nearest)), Left, 11, White, White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(leaderboard), 1), !=, Null)), Null,
			Null, String("{0} : {1} : {2}", Hero Icon String(Hero Of(Value In Array(Global Variable(leaderboard), 1))), Value In Array(
			Global Variable(leaderboard), 1), Round To Integer(Player Variable(Value In Array(Global Variable(leaderboard), 1),
			damageDone), To Nearest)), Left, 10, White, White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(leaderboard), 2), !=, Null)), Null,
			Null, String("{0} : {1} : {2}", Hero Icon String(Hero Of(Value In Array(Global Variable(leaderboard), 2))), Value In Array(
			Global Variable(leaderboard), 2), Round To Integer(Player Variable(Value In Array(Global Variable(leaderboard), 2),
			damageDone), To Nearest)), Left, 9, White, White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(leaderboard), 3), !=, Null)), Null,
			Null, String("{0} : {1} : {2}", Hero Icon String(Hero Of(Value In Array(Global Variable(leaderboard), 3))), Value In Array(
			Global Variable(leaderboard), 3), Round To Integer(Player Variable(Value In Array(Global Variable(leaderboard), 3),
			damageDone), To Nearest)), Left, 8, White, White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(leaderboard), 4), !=, Null)), Null,
			Null, String("{0} : {1} : {2}", Hero Icon String(Hero Of(Value In Array(Global Variable(leaderboard), 4))), Value In Array(
			Global Variable(leaderboard), 4), Round To Integer(Player Variable(Value In Array(Global Variable(leaderboard), 4),
			damageDone), To Nearest)), Left, 7, White, White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(leaderboard), 5), !=, Null)), Null,
			Null, String("{0} : {1} : {2}", Hero Icon String(Hero Of(Value In Array(Global Variable(leaderboard), 5))), Value In Array(
			Global Variable(leaderboard), 5), Round To Integer(Player Variable(Value In Array(Global Variable(leaderboard), 5),
			damageDone), To Nearest)), Left, 6, White, White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(leaderboard), 6), !=, Null)), Null,
			Null, String("{0} : {1} : {2}", Hero Icon String(Hero Of(Value In Array(Global Variable(leaderboard), 6))), Value In Array(
			Global Variable(leaderboard), 6), Round To Integer(Player Variable(Value In Array(Global Variable(leaderboard), 6),
			damageDone), To Nearest)), Left, 5, White, White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(leaderboard), 7), !=, Null)), Null,
			Null, String("{0} : {1} : {2}", Hero Icon String(Hero Of(Value In Array(Global Variable(leaderboard), 7))), Value In Array(
			Global Variable(leaderboard), 7), Round To Integer(Player Variable(Value In Array(Global Variable(leaderboard), 7),
			damageDone), To Nearest)), Left, 4, White, White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(leaderboard), 8), !=, Null)), Null,
			Null, String("{0} : {1} : {2}", Hero Icon String(Hero Of(Value In Array(Global Variable(leaderboard), 8))), Value In Array(
			Global Variable(leaderboard), 8), Round To Integer(Player Variable(Value In Array(Global Variable(leaderboard), 8),
			damageDone), To Nearest)), Left, 3, White, White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(leaderboard), 9), !=, Null)), Null,
			Null, String("{0} : {1} : {2}", Hero Icon String(Hero Of(Value In Array(Global Variable(leaderboard), 9))), Value In Array(
			Global Variable(leaderboard), 9), Round To Integer(Player Variable(Value In Array(Global Variable(leaderboard), 9),
			damageDone), To Nearest)), Left, 2, White, White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(leaderboard), 10), !=, Null)), Null,
			Null, String("{0} : {1} : {2}", Hero Icon String(Hero Of(Value In Array(Global Variable(leaderboard), 10))), Value In Array(
			Global Variable(leaderboard), 10), Round To Integer(Player Variable(Value In Array(Global Variable(leaderboard), 10),
			damageDone), To Nearest)), Left, 1, White, White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(leaderboard), 11), !=, Null)), Null,
			Null, String("{0} : {1} : {2}", Hero Icon String(Hero Of(Value In Array(Global Variable(leaderboard), 11))), Value In Array(
			Global Variable(leaderboard), 11), Round To Integer(Player Variable(Value In Array(Global Variable(leaderboard), 11),
			damageDone), To Nearest)), Left, 0, White, White, White, Visible To and String, Default Visibility);
	}
}

rule("Take away score if kill yourself {Punishment}")
{
	event
	{
		Player Died;
		All;
		All;
	}

	conditions
	{
		Attacker == Event Player;
	}

	actions
	{
		Set Player Variable(Event Player, killYourselfPunishment, True);
		Small Message(Event Player, String("{0} {1} {2}", String("You Lose", Null, Null, Null), Round To Integer(Event Damage, To Nearest),
			Custom String("{0} (SUICIDE)", String("Points", Null, Null, Null), Null, Null)));
		Modify Player Variable(Event Player, damageDone, Subtract, Event Damage);
		Set Player Score(Event Player, Player Variable(Event Player, damageDone));
		Set Player Variable(Event Player, nextObjective, Multiply(Add(Round To Integer(Divide(Player Variable(Event Player, damageDone),
			1000), Down), 1), 1000));
		Wait(0.032, Ignore Condition);
		Set Player Variable(Event Player, killYourselfPunishment, False);
	}
}

rule("Take away score if damage yourself {Punishment}")
{
	event
	{
		Player Dealt Damage;
		All;
		All;
	}

	conditions
	{
		Attacker == Victim;
	}

	actions
	{
		Wait(0.016, Ignore Condition);
		Abort If(Compare(Player Variable(Event Player, killYourselfPunishment), ==, True));
		Skip If(Compare(Event Damage, <=, 0.500), 1);
		Small Message(Event Player, String("{0} {1} {2}", String("You Lose", Null, Null, Null), Round To Integer(Event Damage, To Nearest),
			Custom String("{0} (SELF-DAMAGE)", String("Points", Null, Null, Null), Null, Null)));
		Modify Player Variable(Event Player, damageDone, Subtract, Event Damage);
		Set Player Score(Event Player, Player Variable(Event Player, damageDone));
		Set Player Variable(Event Player, nextObjective, Multiply(Add(Round To Integer(Divide(Player Variable(Event Player, damageDone),
			1000), Down), 1), 1000));
	}
}

rule("Victory")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Player Variable(Event Player, damageDone) >= 10000;
	}

	actions
	{
		Big Message(All Players(All Teams), Custom String("GG. Thanks for playing {0}", Icon String(Happy), Null, Null));
		Create Effect(All Players(All Teams), Sparkles, White, Event Player, 1.500, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Yellow, Event Player, 1.500, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Green, Event Player, 1.500, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Purple, Event Player, 1.500, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Red, Event Player, 1.500, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Blue, Event Player, 1.500, Visible To Position and Radius);
		Create In-World Text(All Players(All Teams), Custom String("{0} {0}!", String("Winner", Null, Null, Null), Null, Null),
			Event Player, 2, Clip Against Surfaces, Visible To Position and String, White, Default Visibility);
		Set Gravity(All Players(All Teams), 0.100);
		Declare Player Victory(Event Player);
	}
}

rule("In assembling {Skip}")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Set Match Time(0);
	}
}

rule("In setup {Reset damageDone}")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is In Setup == True;
	}

	actions
	{
		Set Player Variable(Event Player, damageDone, 0);
	}
}

rule("Hero List - 8 Random DPS + 1 Random Tank (5th) + 1 Random Support (10th) = 29 billons of lists")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Set Global Variable(heroList, All Damage Heroes);
		Set Global Variable(heroList, Randomized Array(Global Variable(heroList)));
		Set Global Variable(heroList, Array Slice(Global Variable(heroList), 0, 9));
		Set Global Variable At Index(heroList, 4, Random Value In Array(All Tank Heroes));
		Modify Global Variable(heroList, Append To Array, Random Value In Array(All Support Heroes));
	}
}

disabled rule("Hero List - 10 Random DPS - Turrets abilities banned")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Set Global Variable(heroList, All Damage Heroes);
		Set Global Variable(heroList, Randomized Array(Global Variable(heroList)));
		Set Global Variable(heroList, Array Slice(Global Variable(heroList), 0, 10));
	}
}

disabled rule("Hero List - 10 Random Heroes (ALL HEROES) - Turrets abilities banned")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Set Global Variable(heroList, All Heroes);
		Set Global Variable(heroList, Randomized Array(Global Variable(heroList)));
		Set Global Variable(heroList, Array Slice(Global Variable(heroList), 0, 10));
	}
}

rule("Preload Heroes")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	actions
	{
		Preload Hero(Event Player, Global Variable(heroList));
	}
}

rule("In Setup -> Starting Hero -> HeroList[0]")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is In Setup == True;
	}

	actions
	{
		Start Forcing Player To Be Hero(Event Player, First Of(Global Variable(heroList)));
		Set Player Variable(Event Player, nextObjective, 1000);
	}
}

rule("In Game in progress -> Starting Hero -> HeroList[0]")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Game In Progress == True;
	}

	actions
	{
		Start Forcing Player To Be Hero(Event Player, First Of(Global Variable(heroList)));
		Set Player Variable(Event Player, nextObjective, 1000);
	}
}

rule("Start forcing next hero")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Alive(Event Player) == True;
		Hero Of(Event Player) != Value In Array(Global Variable(heroList), Subtract(Divide(Player Variable(Event Player, nextObjective),
			1000), 1));
		Player Variable(Event Player, damageDone) > 0;
	}

	actions
	{
		Set Player Variable(Event Player, nextObjective, Multiply(Add(Round To Integer(Divide(Player Variable(Event Player, damageDone),
			1000), Down), 1), 1000));
		Start Forcing Player To Be Hero(Event Player, Value In Array(Global Variable(heroList), Subtract(Divide(Player Variable(
			Event Player, nextObjective), 1000), 1)));
		Small Message(Event Player, String("{0}: {1}", String("{0} {1}", String("You", Null, Null, Null), String("Hero", Null, Null, Null),
			Null), Hero Icon String(Value In Array(Global Variable(heroList), Subtract(Divide(Player Variable(Event Player, nextObjective),
			1000), 1))), Null));
		Create In-World Text(All Players(All Teams), Hero Icon String(Value In Array(Global Variable(heroList), Subtract(Divide(
			Player Variable(Event Player, nextObjective), 1000), 1))), Event Player, 1, Clip Against Surfaces,
			Visible To Position and String, White, Default Visibility);
		Set Player Variable(Event Player, heroIcon, Last Text ID);
		Wait(0.125, Ignore Condition);
		Play Effect(All Players(All Teams), Good Pickup Effect, Purple, Event Player, 1);
		Create Effect(All Players(All Teams), Sparkles, Purple, Event Player, 1, Visible To Position and Radius);
		Set Player Variable(Event Player, heroSwapEffect, Last Created Entity);
		Wait(1.250, Ignore Condition);
		Destroy In-World Text(Player Variable(Event Player, heroIcon));
		Destroy Effect(Player Variable(Event Player, heroSwapEffect));
	}
}

rule("in da hood TEXT")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), ==, First Of(Global Variable(
			heroList)))), Null, Null, String("{0} -> {1}", 1, String("{0} {1}", Hero Icon String(First Of(Global Variable(heroList))),
			Count Of(Players On Hero(First Of(Global Variable(heroList)), All Teams)), Null), Null), Right, 1, White, White, Blue,
			Visible To and String, Visible Never);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), !=, First Of(Global Variable(
			heroList)))), Null, Null, String("{0} -> {1}", 1, String("{0} {1}", Hero Icon String(First Of(Global Variable(heroList))),
			Count Of(Players On Hero(First Of(Global Variable(heroList)), All Teams)), Null), Null), Right, 1, White, White, White,
			Visible To and String, Visible Always);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), ==, Value In Array(Global Variable(
			heroList), 1))), Null, Null, String("{0} -> {1}", 2, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(
			heroList), 1)), Count Of(Players On Hero(Value In Array(Global Variable(heroList), 1), All Teams)), Null), Null), Right, 2,
			White, White, Blue, Visible To and String, Visible Never);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), !=, Value In Array(Global Variable(
			heroList), 1))), Null, Null, String("{0} -> {1}", 2, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(
			heroList), 1)), Count Of(Players On Hero(Value In Array(Global Variable(heroList), 1), All Teams)), Null), Null), Right, 2,
			White, White, White, Visible To and String, Visible Always);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), ==, Value In Array(Global Variable(
			heroList), 2))), Null, Null, String("{0} -> {1}", 3, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(
			heroList), 2)), Count Of(Players On Hero(Value In Array(Global Variable(heroList), 2), All Teams)), Null), Null), Right, 3,
			White, White, Blue, Visible To and String, Visible Never);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), !=, Value In Array(Global Variable(
			heroList), 2))), Null, Null, String("{0} -> {1}", 3, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(
			heroList), 2)), Count Of(Players On Hero(Value In Array(Global Variable(heroList), 2), All Teams)), Null), Null), Right, 3,
			White, White, White, Visible To and String, Visible Always);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), ==, Value In Array(Global Variable(
			heroList), 3))), Null, Null, String("{0} -> {1}", 4, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(
			heroList), 3)), Count Of(Players On Hero(Value In Array(Global Variable(heroList), 3), All Teams)), Null), Null), Right, 4,
			White, White, Blue, Visible To and String, Visible Never);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), !=, Value In Array(Global Variable(
			heroList), 3))), Null, Null, String("{0} -> {1}", 4, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(
			heroList), 3)), Count Of(Players On Hero(Value In Array(Global Variable(heroList), 3), All Teams)), Null), Null), Right, 4,
			White, White, White, Visible To and String, Visible Always);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), ==, Value In Array(Global Variable(
			heroList), 4))), Null, Null, String("{0} -> {1}", 5, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(
			heroList), 4)), Count Of(Players On Hero(Value In Array(Global Variable(heroList), 4), All Teams)), Null), Null), Right, 5,
			White, White, Turquoise, Visible To and String, Visible Never);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), !=, Value In Array(Global Variable(
			heroList), 4))), Null, Null, String("{0} -> {1}", 5, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(
			heroList), 4)), Count Of(Players On Hero(Value In Array(Global Variable(heroList), 4), All Teams)), Null), Null), Right, 5,
			White, White, Orange, Visible To and String, Visible Always);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), ==, Value In Array(Global Variable(
			heroList), 5))), Null, Null, String("{0} -> {1}", 6, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(
			heroList), 5)), Count Of(Players On Hero(Value In Array(Global Variable(heroList), 5), All Teams)), Null), Null), Right, 6,
			White, White, Blue, Visible To and String, Visible Never);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), !=, Value In Array(Global Variable(
			heroList), 5))), Null, Null, String("{0} -> {1}", 6, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(
			heroList), 5)), Count Of(Players On Hero(Value In Array(Global Variable(heroList), 5), All Teams)), Null), Null), Right, 6,
			White, White, White, Visible To and String, Visible Always);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), ==, Value In Array(Global Variable(
			heroList), 6))), Null, Null, String("{0} -> {1}", 7, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(
			heroList), 6)), Count Of(Players On Hero(Value In Array(Global Variable(heroList), 6), All Teams)), Null), Null), Right, 7,
			White, White, Blue, Visible To and String, Visible Never);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), !=, Value In Array(Global Variable(
			heroList), 6))), Null, Null, String("{0} -> {1}", 7, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(
			heroList), 6)), Count Of(Players On Hero(Value In Array(Global Variable(heroList), 6), All Teams)), Null), Null), Right, 7,
			White, White, White, Visible To and String, Visible Always);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), ==, Value In Array(Global Variable(
			heroList), 7))), Null, Null, String("{0} -> {1}", 8, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(
			heroList), 7)), Count Of(Players On Hero(Value In Array(Global Variable(heroList), 7), All Teams)), Null), Null), Right, 8,
			White, White, Blue, Visible To and String, Visible Never);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), !=, Value In Array(Global Variable(
			heroList), 7))), Null, Null, String("{0} -> {1}", 8, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(
			heroList), 7)), Count Of(Players On Hero(Value In Array(Global Variable(heroList), 7), All Teams)), Null), Null), Right, 8,
			White, White, White, Visible To and String, Visible Always);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), ==, Value In Array(Global Variable(
			heroList), 8))), Null, Null, String("{0} -> {1}", 9, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(
			heroList), 8)), Count Of(Players On Hero(Value In Array(Global Variable(heroList), 8), All Teams)), Null), Null), Right, 9,
			White, White, Blue, Visible To and String, Visible Never);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), !=, Value In Array(Global Variable(
			heroList), 8))), Null, Null, String("{0} -> {1}", 9, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(
			heroList), 8)), Count Of(Players On Hero(Value In Array(Global Variable(heroList), 8), All Teams)), Null), Null), Right, 9,
			White, White, White, Visible To and String, Visible Always);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), ==, Value In Array(Global Variable(
			heroList), 9))), Null, Null, String("{0} -> {1}", 10, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(
			heroList), 9)), Count Of(Players On Hero(Value In Array(Global Variable(heroList), 9), All Teams)), Null), Null), Right, 10,
			White, White, Turquoise, Visible To and String, Visible Never);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), !=, Value In Array(Global Variable(
			heroList), 9))), Null, Null, String("{0} -> {1}", 10, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(
			heroList), 9)), Count Of(Players On Hero(Value In Array(Global Variable(heroList), 9), All Teams)), Null), Null), Right, 10,
			White, White, Orange, Visible To and String, Visible Always);
	}
}

disabled rule("in da hood HEADER")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), ==, First Of(Global Variable(
			heroList)))), String("{0} -> {1}", 1, String("{0} {1}", Hero Icon String(First Of(Global Variable(heroList))), Count Of(
			Players On Hero(First Of(Global Variable(heroList)), All Teams)), Null), Null), Null, Null, Right, 1, Blue, White, White,
			Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), !=, First Of(Global Variable(
			heroList)))), String("{0} -> {1}", 1, String("{0} {1}", Hero Icon String(First Of(Global Variable(heroList))), Count Of(
			Players On Hero(First Of(Global Variable(heroList)), All Teams)), Null), Null), Null, Null, Right, 1, White, White, White,
			Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), ==, Value In Array(Global Variable(
			heroList), 1))), String("{0} -> {1}", 2, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(heroList), 1)),
			Count Of(Players On Hero(Value In Array(Global Variable(heroList), 1), All Teams)), Null), Null), Null, Null, Right, 2, Blue,
			White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), !=, Value In Array(Global Variable(
			heroList), 1))), String("{0} -> {1}", 2, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(heroList), 1)),
			Count Of(Players On Hero(Value In Array(Global Variable(heroList), 1), All Teams)), Null), Null), Null, Null, Right, 2, White,
			White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), ==, Value In Array(Global Variable(
			heroList), 2))), String("{0} -> {1}", 3, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(heroList), 2)),
			Count Of(Players On Hero(Value In Array(Global Variable(heroList), 2), All Teams)), Null), Null), Null, Null, Right, 3, Blue,
			White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), !=, Value In Array(Global Variable(
			heroList), 2))), String("{0} -> {1}", 3, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(heroList), 2)),
			Count Of(Players On Hero(Value In Array(Global Variable(heroList), 2), All Teams)), Null), Null), Null, Null, Right, 3, White,
			White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), ==, Value In Array(Global Variable(
			heroList), 3))), String("{0} -> {1}", 4, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(heroList), 3)),
			Count Of(Players On Hero(Value In Array(Global Variable(heroList), 3), All Teams)), Null), Null), Null, Null, Right, 4, Blue,
			White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), !=, Value In Array(Global Variable(
			heroList), 3))), String("{0} -> {1}", 4, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(heroList), 3)),
			Count Of(Players On Hero(Value In Array(Global Variable(heroList), 3), All Teams)), Null), Null), Null, Null, Right, 4, White,
			White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), ==, Value In Array(Global Variable(
			heroList), 4))), String("{0} -> {1}", 5, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(heroList), 4)),
			Count Of(Players On Hero(Value In Array(Global Variable(heroList), 4), All Teams)), Null), Null), Null, Null, Right, 5,
			Turquoise, White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), !=, Value In Array(Global Variable(
			heroList), 4))), String("{0} -> {1}", 5, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(heroList), 4)),
			Count Of(Players On Hero(Value In Array(Global Variable(heroList), 4), All Teams)), Null), Null), Null, Null, Right, 5, Orange,
			White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), ==, Value In Array(Global Variable(
			heroList), 5))), String("{0} -> {1}", 6, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(heroList), 5)),
			Count Of(Players On Hero(Value In Array(Global Variable(heroList), 5), All Teams)), Null), Null), Null, Null, Right, 6, Blue,
			White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), !=, Value In Array(Global Variable(
			heroList), 5))), String("{0} -> {1}", 6, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(heroList), 5)),
			Count Of(Players On Hero(Value In Array(Global Variable(heroList), 5), All Teams)), Null), Null), Null, Null, Right, 6, White,
			White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), ==, Value In Array(Global Variable(
			heroList), 6))), String("{0} -> {1}", 7, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(heroList), 6)),
			Count Of(Players On Hero(Value In Array(Global Variable(heroList), 6), All Teams)), Null), Null), Null, Null, Right, 7, Blue,
			White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), !=, Value In Array(Global Variable(
			heroList), 6))), String("{0} -> {1}", 7, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(heroList), 6)),
			Count Of(Players On Hero(Value In Array(Global Variable(heroList), 6), All Teams)), Null), Null), Null, Null, Right, 7, White,
			White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), ==, Value In Array(Global Variable(
			heroList), 7))), String("{0} -> {1}", 8, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(heroList), 7)),
			Count Of(Players On Hero(Value In Array(Global Variable(heroList), 7), All Teams)), Null), Null), Null, Null, Right, 8, Blue,
			White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), !=, Value In Array(Global Variable(
			heroList), 7))), String("{0} -> {1}", 8, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(heroList), 7)),
			Count Of(Players On Hero(Value In Array(Global Variable(heroList), 7), All Teams)), Null), Null), Null, Null, Right, 8, White,
			White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), ==, Value In Array(Global Variable(
			heroList), 8))), String("{0} -> {1}", 9, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(heroList), 8)),
			Count Of(Players On Hero(Value In Array(Global Variable(heroList), 8), All Teams)), Null), Null), Null, Null, Right, 9, Blue,
			White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), !=, Value In Array(Global Variable(
			heroList), 8))), String("{0} -> {1}", 9, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(heroList), 8)),
			Count Of(Players On Hero(Value In Array(Global Variable(heroList), 8), All Teams)), Null), Null), Null, Null, Right, 9, White,
			White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), ==, Value In Array(Global Variable(
			heroList), 9))), String("{0} -> {1}", 10, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(heroList), 9)),
			Count Of(Players On Hero(Value In Array(Global Variable(heroList), 9), All Teams)), Null), Null), Null, Null, Right, 10,
			Turquoise, White, White, Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Compare(Hero Of(Current Array Element), !=, Value In Array(Global Variable(
			heroList), 9))), String("{0} -> {1}", 10, String("{0} {1}", Hero Icon String(Value In Array(Global Variable(heroList), 9)),
			Count Of(Players On Hero(Value In Array(Global Variable(heroList), 9), All Teams)), Null), Null), Null, Null, Right, 10,
			Orange, White, White, Visible To and String, Default Visibility);
	}
}

rule("Time Counter - Add second")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Game In Progress == True;
	}

	actions
	{
		Set Match Time(Global Variable(timeCounter));
		Wait(1, Ignore Condition);
		Modify Global Variable(timeCounter, Add, 1);
		Loop;
	}
}

rule("Game is almost done")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Game In Progress == True;
		Player Variable(Event Player, damageDone) >= 9000;
		Global Variable(gameIsAlmostDone) == False;
	}

	actions
	{
		Set Global Variable(gameIsAlmostDone, True);
		Enable Built-In Game Mode Announcer;
		Enable Built-In Game Mode Music;
		Small Message(All Players(All Teams), Custom String("10K Damage Gun Game v8.0.0", Null, Null, Null));
		Wait(3.500, Ignore Condition);
		Small Message(All Players(All Teams), Custom String("Created by Jokaes#2263", Null, Null, Null));
	}
}

rule("Next Objective {Next hero}")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Game In Progress == True;
		Player Variable(Event Player, nextObjective) <= 9000;
		Player Variable(Event Player, nextObjective) >= 0;
	}

	actions
	{
		Set Objective Description(Event Player, String("{0} {1} {2}", String("Deal", Null, Null, Null), Round To Integer(Subtract(
			Player Variable(Event Player, nextObjective), Player Variable(Event Player, damageDone)), Down), String("{0} -> {1}", String(
			"Damage", Null, Null, Null), Hero Icon String(Value In Array(Global Variable(heroList), Divide(Player Variable(Event Player,
			nextObjective), 1000))), Null)), Visible To and String);
	}
}

rule("Next Objective {Win}")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Game In Progress == True;
		Player Variable(Event Player, nextObjective) == 10000;
	}

	actions
	{
		Set Objective Description(Event Player, String("{0} {1} {2}", String("Deal", Null, Null, Null), Round To Integer(Subtract(
			Player Variable(Event Player, nextObjective), Player Variable(Event Player, damageDone)), Down), String("{0} -> {1}", String(
			"Damage", Null, Null, Null), String("{0} {1}", String("You Win", Null, Null, Null), Icon String(Happy), Null), Null)),
			Visible To and String);
	}
}

rule("Next Hero HUD")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	actions
	{
		Create HUD Text(Event Player, Null, String("{0}: {1}", String("Next Hero", Null, Null, Null), Player Variable(Event Player,
			nextObjective), Null), Null, Top, 1, White, White, White, Visible To and String, Default Visibility);
	}
}

rule("Random section of the map")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Set Global Variable(randomSectionOfMap, Random Integer(1, 2));
	}
}

disabled rule("Always secundary map if exists")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Set Global Variable(randomSectionOfMap, 2);
	}
}

rule("Global init -Created by Beemoo")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Current Map == Map(Havana);
		Global Variable(randomSectionOfMap) == 2;
	}

	actions
	{
		Set Global Variable(arenaMap1, False);
		Set Global Variable(arenaMap2, Vector(215, 35, -40.000));
		Set Global Variable(arenaMap3, Empty Array);
		Modify Global Variable(arenaMap3, Append To Array, Vector(227.500, 27.500, -57.000));
		Modify Global Variable(arenaMap3, Append To Array, Vector(227.500, 27.500, -40.500));
		Modify Global Variable(arenaMap3, Append To Array, Vector(227.500, 27.500, -25.500));
		Modify Global Variable(arenaMap3, Append To Array, Vector(218, 27.500, -16.500));
		Modify Global Variable(arenaMap3, Append To Array, Vector(204.830, 27.500, -16.500));
		Modify Global Variable(arenaMap3, Append To Array, Vector(191.170, 27.500, -20.780));
		Modify Global Variable(arenaMap3, Append To Array, Vector(181.600, 27.500, -30.100));
		Modify Global Variable(arenaMap3, Append To Array, Vector(171.190, 28.210, -42.000));
		Modify Global Variable(arenaMap3, Append To Array, Vector(171.190, 28.210, -55.000));
		Modify Global Variable(arenaMap3, Append To Array, Vector(185, 27.500, -64.600));
		Modify Global Variable(arenaMap3, Append To Array, Vector(197.600, 27.500, -64.590));
		Modify Global Variable(arenaMap3, Append To Array, Vector(210.200, 27.500, -64.590));
		Modify Global Variable(arenaMap3, Append To Array, Vector(222.600, 27.500, -64.590));
		Set Global Variable(arenaMap4, Subtract(Count Of(Global Variable(arenaMap3)), 1));
		Create Effect(All Players(All Teams), Sphere, Red, Vector(184, -71.800, -46.000), 100, Visible To Position and Radius);
		Skip If(Not(Global Variable(arenaMap1)), 1);
		Create Effect(All Players(All Teams), Orb, Purple, Global Variable(arenaMap2), 1, Visible To Position and Radius);
	}
}

rule("Effect create loop -Created by Beemoo")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Current Map == Map(Havana);
		Global Variable(arenaMap1) == True;
		Global Variable(arenaMap4) > 0;
		Global Variable(randomSectionOfMap) == 2;
	}

	actions
	{
		Wait(0.250, Ignore Condition);
		Create Effect(All Players(All Teams), Ring, Yellow, Value In Array(Global Variable(arenaMap3), Global Variable(arenaMap4)), 1.200,
			Visible To);
		Modify Global Variable(arenaMap4, Subtract, 1);
		Loop If Condition Is True;
	}
}

rule("No entry pillars (knock, tele) -Created by Beemoo")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Current Map == Map(Havana);
		Is True For Any(Global Variable(arenaMap3), Compare(Distance Between(Current Array Element, Event Player), <, 1.250)) == True;
		Global Variable(randomSectionOfMap) == 2;
	}

	actions
	{
		Wait(0.500, Ignore Condition);
		Abort If Condition Is False;
		Apply Impulse(Event Player, Direction Towards(Position Of(Event Player), Add(First Of(Global Variable(arenaMap2)), Vector(0, 10,
			0))), 12, To World, Cancel Contrary Motion);
		Set Status(Event Player, Null, Stunned, 1);
		Play Effect(All Players(All Teams), Debuff Impact Sound, White, Event Player, 100);
		Small Message(Event Player, String("{0} {1}", String("No", Null, Null, Null), String("{0}!", String("Hiding", Null, Null, Null),
			Null, Null), Null));
		Wait(0.750, Ignore Condition);
		Abort If Condition Is False;
		Teleport(Event Player, Add(First Of(Global Variable(arenaMap2)), Vector(Random Integer(-8.000, 8), 0, Random Integer(-19.000,
			19))));
	}
}

rule("No entry floor (OOB) -Created by Beemoo")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Current Map == Map(Havana);
		Y Component Of(Position Of(Event Player)) < 26.500;
		Y Component Of(Position Of(Event Player)) > 25;
		Global Variable(randomSectionOfMap) == 2;
	}

	actions
	{
		Set Status(Event Player, Null, Burning, 0.500);
		Damage(Event Player, Event Player, 25);
		Apply Impulse(Event Player, Direction Towards(Position Of(Event Player), Add(First Of(Global Variable(arenaMap2)), Vector(0, 10,
			0))), 12, To World, Cancel Contrary Motion);
		Wait(0.500, Ignore Condition);
		Loop If Condition Is True;
	}
}

rule("No entry OOB (spawn tele) -Created by Beemoo")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Current Map == Map(Havana);
		Has Spawned(Event Player) == True;
		Or(Or(Or(Compare(X Component Of(Position Of(Event Player)), <, 171), Compare(X Component Of(Position Of(Event Player)), >, 229)),
			Compare(Z Component Of(Position Of(Event Player)), <, -66.000)), Compare(Z Component Of(Position Of(Event Player)), >,
			-15.000)) == True;
		Global Variable(randomSectionOfMap) == 2;
	}

	actions
	{
		Teleport(Event Player, Add(Global Variable(arenaMap2), Vector(Random Integer(-8.000, 8), 0, Random Integer(-19.000, 19))));
	}
}

disabled rule("Score Debug (TEST)")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Interact) == True;
	}

	actions
	{
		Modify Player Variable(Event Player, damageDone, Add, 100);
		Set Player Score(Event Player, Player Variable(Event Player, damageDone));
		Set Player Variable(Event Player, nextObjective, Multiply(Add(Round To Integer(Divide(Player Variable(Event Player, damageDone),
			1000), Down), 1), 1000));
		Start Forcing Player To Be Hero(Event Player, Value In Array(Global Variable(heroList), Subtract(Divide(Player Variable(
			Event Player, nextObjective), 1000), 1)));
		Wait(0.250, Ignore Condition);
	}
}

disabled rule("Dummys Summon (TEST)")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Communicating(Event Player, Hello) == True;
	}

	actions
	{
		Create Dummy Bot(Value In Array(Global Variable(heroList), 0), All Teams, -1.000, Position Of(Event Player), Vector(0, 0, 0));
		disabled Create Dummy Bot(Value In Array(Global Variable(heroList), 0), All Teams, -1.000, Position Of(Event Player), Vector(0, 0, 0));
		disabled Create Dummy Bot(Value In Array(Global Variable(heroList), 0), All Teams, -1.000, Position Of(Event Player), Vector(0, 0, 0));
		disabled Create Dummy Bot(Value In Array(Global Variable(heroList), 0), All Teams, -1.000, Position Of(Event Player), Vector(0, 0, 0));
		disabled Create Dummy Bot(Value In Array(Global Variable(heroList), 0), All Teams, -1.000, Position Of(Event Player), Vector(0, 0, 0));
		disabled Create Dummy Bot(Value In Array(Global Variable(heroList), 0), All Teams, -1.000, Position Of(Event Player), Vector(0, 0, 0));
	}
}

disabled rule("Dummy Aim Bot (TEST)")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Dummy Bot(Event Player) == True;
	}

	actions
	{
		Start Facing(Event Player, Direction Towards(Event Player, Closest Player To(Event Player, Opposite Team Of(Team Of(
			Event Player)))), 10000, To World, Direction and Turn Rate);
		Start Holding Button(Event Player, Primary Fire);
	}
}

disabled rule("Dummy Ult (TEST)")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Dummy Bot(Event Player) == True;
		Ultimate Charge Percent(Event Player) == 100;
	}

	actions
	{
		Press Button(Event Player, Ultimate);
	}
}

rule("Game Mode Description v8.0.0")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Game In Progress == True;
	}

	actions
	{
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("10K Damage Gun Game v8.0.0", Null, Null, Null), Left, -100.000,
			White, White, White, Visible To and String, Visible Always);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("{0} to {1} to swap to the {2}", String("{0} {1} {2}", String(
			"Deal", Null, Null, Null), 10000, String("Damage", Null, Null, Null)), String("{0} and {1}", String("Win", Null, Null, Null),
			1000, Null), String("Next Hero", Null, Null, Null)), Left, -99.000, White, White, White, Visible To and String,
			Visible Always);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("8 random DPS + 1 Tank (5th) + 1 Support (10th)", String(
			"{0} {1} {2}", String("Deal", Null, Null, Null), 10000, String("Damage", Null, Null, Null)), String("{0} and {1}", String(
			"Win", Null, Null, Null), 1000, Null), String("Next Hero", Null, Null, Null)), Left, -98.000, White, White, White,
			Visible To and String, Visible Always);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("Created by Jokaes#2263", Null, Null, Null), Left, -97.000,
			White, White, White, Visible To and String, Visible Always);
		Small Message(All Players(All Teams), Custom String("10K Damage Gun Game v8.0.0", Null, Null, Null));
		Wait(3.500, Ignore Condition);
		Small Message(All Players(All Teams), Custom String("{0} to {1} to swap to the {2}", String("{0} {1} {2}", String("Deal", Null,
			Null, Null), 10000, String("Damage", Null, Null, Null)), String("{0} and {1}", String("Win", Null, Null, Null), 1000, Null),
			String("Next Hero", Null, Null, Null)));
		Wait(3.500, Ignore Condition);
		Small Message(All Players(All Teams), Custom String("8 random DPS + 1 Tank (5th) + 1 Support (10th)", Null, Null, Null));
		Wait(3.500, Ignore Condition);
		Small Message(All Players(All Teams), Custom String("Created by Jokaes#2263", Null, Null, Null));
	}
}

rule("Game Mode Description for players who join")
{
	event
	{
		Player Joined Match;
		All;
		All;
	}

	conditions
	{
		Is Game In Progress == True;
		Global Variable(timeCounter) >= 15;
	}

	actions
	{
		Small Message(Event Player, Custom String("10K Damage Gun Game v8.0.0", Null, Null, Null));
		Wait(3.500, Ignore Condition);
		Small Message(Event Player, Custom String("{0} to {1} to swap to the {2}", String("{0} {1} {2}", String("Deal", Null, Null, Null),
			10000, String("Damage", Null, Null, Null)), String("{0} and {1}", String("Win", Null, Null, Null), 1000, Null), String(
			"Next Hero", Null, Null, Null)));
		Wait(3.500, Ignore Condition);
		Small Message(Event Player, Custom String("8 random DPS + 1 Tank (5th) + 1 Support (10th)", Null, Null, Null));
		Wait(3.500, Ignore Condition);
		Small Message(Event Player, Custom String("Created by Jokaes#2263", Null, Null, Null));
	}
}

disabled rule("10K Damage Gun Game v8.0.0")
{
	event
	{
		Ongoing - Global;
	}
}

disabled rule("Created by Jokaes#2263")
{
	event
	{
		Ongoing - Global;
	}
}